package ${plugin.parameter.domainPackageName};
import java.util.Set;
import java.util.LinkedHashSet;
import com.taiji.core.domain.Entity;

public class $table.destinationClassName extends Entity {

  // fields
#foreach( $column in $table.notKeyColumns)
   private $column.javaType ${column.variableName};

#end

  // relations
#foreach($relationshipRole in $table.relationshipRoles)
#if( $relationshipRole.enabled )
#set( $many2many = $relationshipRole.relation.many2Many )
#set( $one2one = $relationshipRole.relation.one2One )
#set( $bidirectional = $relationshipRole.relation.bidirectional )
#set( $target = $relationshipRole.getTarget($plugin))
#set( $relationName = "${table.getQualifiedDestinationClassName($relationshipRole)}")
#set( $fone2one =(($one2one && $relationshipRole.originPrimaryKey) ||($one2one && $table.isRoleOneToOnePrimaryKeys($relationshipRole, $target)))&& !$relationshipRole.isFkPk())

########## Compute cardinality strings for javadocs. Useful for humans.
#if( $bidirectional )
#set( $directionalityText = "bi-directional" )
#else
#set( $directionalityText = "uni-directional" )
#end
#if( $many2many )
#set( $cardinalityText = "many-to-many" )
#else
#if($relationshipRole.relation.one2One)
#set( $cardinalityText = "one-to-one" )
#else
#set( $cardinalityText = "one-to-many" )
#end
#end

#if( $relationshipRole.targetMany )
   private ${table.getClassName($relationshipRole)} $table.getVariableName($relationshipRole) = new java.util.LinkedHashSet();
#else
  private ${table.getClassName($relationshipRole)} $table.getVariableName($relationshipRole) = null;
#end   

#end
#end

#foreach( $column in $table.notKeyColumns)

   public $column.javaType get${column.capitalisedVariableName}() {
    return $column.variableName;
  }


  public void set${column.capitalisedVariableName}($column.javaType new${column.capitalisedVariableName}) {
    $column.variableName = new${column.capitalisedVariableName};
  }

#end
#foreach($relationshipRole in $table.relationshipRoles)
#if( $relationshipRole.enabled )
#set( $target = $relationshipRole.getTarget($plugin))
#set( $one2one = $relationshipRole.relation.one2One )

 public $table.getClassName($relationshipRole) $table.getGetterName($relationshipRole)() {
    return $table.getVariableName($relationshipRole);
  }

  public void $table.getSetterName($relationshipRole)($table.getClassName($relationshipRole) $table.getVariableName($relationshipRole)) {
    this.$table.getVariableName($relationshipRole) = $table.getVariableName($relationshipRole);
  } 


#end
#end

}
