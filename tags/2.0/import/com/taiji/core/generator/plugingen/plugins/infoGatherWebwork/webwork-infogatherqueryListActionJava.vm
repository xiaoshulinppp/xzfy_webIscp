package ${plugin.parameter.acitionPackageName};
#set( $objectName = "$table.getVariableName()")
#set( $className = "${table.destinationClassName}")

import com.opensymphony.xwork.ActionContext;
import com.taiji.core.util.Constants;
import com.taiji.core.util.PaginationSupport;
import com.taiji.core.webwork.action.ProtectedListAction;
import com.taiji.user.domain.User;
import com.taiji.user.service.IUserService;

import  ${plugin.parameter.domainPackageName}.*;
import  ${plugin.parameter.servicePackageName}.*;
import com.taiji.system.service.PostTree;
import com.taiji.system.service.PostTreeNode;

public class List${className}QueryAction extends ProtectedListAction{
	private ${className}QueryTerm queryTerm;
	private String referrerName;
	private String operationCode;
	private int flag;
	private IUserService userService;
	private I${className}Service queryService;
	private static final String TABLE_NAME = "${table.sqlName}";
	
	
	public void setQueryTerm(${className}QueryTerm queryTerm){
		this.queryTerm=queryTerm;
	}
	public ${className}QueryTerm getQueryTerm(){
		return this.queryTerm;
	}
	public void setReferrerName(String referrerName){
		this.referrerName=referrerName;
	}
	public String getReferrerName(){
		return this.referrerName;
	}
	public void setOperationCode(String operationCode){
		this.operationCode=operationCode;
	}
	public String getOperationCode(){
		return this.operationCode;
	}
	public void setFlag(int flag){
		this.flag=flag;
	}
	public int getFlag(){
		return this.flag;
	}
	public void setUserService(IUserService iuserService){
		this.userService=iuserService;
	}
	public IUserService getUserService(){
		return this.userService;
	}
	public void set${className}Service (I${className}Service queryService){
		this.queryService=queryService;
	}
	public I${className}Service get${className}Service(){
		return this.queryService;
	}
	public String getTableName() {
		return TABLE_NAME;
	}
	public Class getPersistentClass() {
		return ${className}.class;
	}
	public PaginationSupport getInitResult() {
		if(flag==1){
			User currentUser = (User) ActionContext.getContext().getSession().get(Constants.USER_LOGIN);
	        PostTree tree=queryService.treegetPostTree(operationCode);
			PostTreeNode node=queryService.treegetPostTreeNode(currentUser.getId(),operationCode);
			if(node==null) {
			  return new PaginationSupport();
			}
			User referrerUser=userService.getUserByName(referrerName);
			queryTerm.setIsBlak(tree.isSearchall());
			queryTerm.setStationId(node.getId().intValue());
			if(referrerName==null || referrerName.equals("")){
                queryTerm.setReferrerId(-1);
            }
			
			if(referrerUser!=null){
				queryTerm.setReferrerId(Integer.parseInt(referrerUser.getId().toString()));
		}
			ActionContext.getContext().getSession().put("queryTerm",queryTerm);
		}else{
			queryTerm=(${className}QueryTerm) ActionContext.getContext().getSession().get("queryTerm");
		}
		return queryService.getList(queryTerm,getPageNum(),20);
	}
	public String link() throws Exception{
		return SUCCESS;
	}
}