package ${plugin.parameter.acitionPackageName};
#set( $objectName = "$table.getVariableName()")
#set( $className = "${table.destinationClassName}")
#set ($keyColumn = $table.pkColumn) 
#set ($keyvar = ${keyColumn.variableName}) 
#set ($keyCVar = ${keyColumn.capitalisedVariableName})

import com.opensymphony.xwork.ActionContext;
import com.taiji.core.util.Constants;
import com.taiji.core.util.PaginationSupport;
import com.taiji.core.webwork.action.ProtectedListAction;
import com.taiji.system.service.PostTree;
import com.taiji.system.service.PostTreeNode;
import com.taiji.user.domain.User;
import  ${plugin.parameter.domainPackageName}.*;
import  ${plugin.parameter.servicePackageName}.*;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class List${className}QueryHistoryAction extends ProtectedListAction{
	private Integer infoId;
	private String operationCode;
	private PaginationSupport queryHistoryList;
	private static final String TABLE_NAME = "${table.sqlName}";
	private I${className}Service queryService;
	private List pList;
		
	
	public void setInfoId(Integer id){
		this.infoId = id;
	}
	public Integer getInfoId(){
		return infoId;
	}
	public void setOperationCode(String operationCode){
		this.operationCode=operationCode;
	}
	public String getOperationCode(){
		return this.operationCode;
	}
	public void set${className}Service(I${className}Service queryService){
		this.queryService = queryService;
	}
	public I${className}Service get${className}Service(){
		return this.queryService;
	}
	public PaginationSupport getQueryHistoryList() {
		return queryHistoryList;
	}
	
	public String execute() {
	 try{
		User currentUser = (User) ActionContext.getContext().getSession().get(Constants.USER_LOGIN);
	    PostTree tree=queryService.treegetPostTree(operationCode);
		PostTreeNode node=queryService.treegetPostTreeNode(currentUser.getId(),operationCode);
		queryHistoryList =queryService.getHistoryList(infoId,tree.isSearchall(),node.getId(),getPageNum());
		wrapResult(TABLE_NAME,queryHistoryList,${className}.class.getName());
		
	    Iterator iter = queryHistoryList.getItems().iterator();
		pList = new ArrayList();
		while(iter.hasNext()) {
			${className}History history = (${className}History) iter.next();
			Integer pid = history.get${className}CheckHistory().getPositionid(); 
			pList.add(queryService.treegetPostTree(operationCode).getTreeNode(pid).getName());
		}
	}catch(Exception e){
			e.printStackTrace();
			return ERROR;
		}
		return SUCCESS;
	}
	public List getPList() {
		return pList;
	}
	public Class getPersistentClass(){
	  return ${className}.class;
	}	
	public PaginationSupport getInitResult() {
	    return null;
	}	
	public String getTableName() {
		return TABLE_NAME;
	}

}