package ${plugin.parameter.acitionPackageName};
#set( $objectName = "$table.getVariableName()")
#set( $tableName ="$table.getName()")
#set( $className = "${table.destinationClassName}")
#set( $flag = "true" )

import com.taiji.core.webwork.action.ProtectedListAction;
import  ${plugin.parameter.domainPackageName}.*;
import com.taiji.core.util.PaginationSupport;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import com.opensymphony.xwork.ActionContext;

public class List${className}InLineAction extends ProtectedListAction {
	private static final Log log = LogFactory.getLog(List${className}InLineAction.class);
	private static final String TABLE_NAME = "${tableName}";
    private String opName;
    private String listType;
    
    #foreach($relationshipRole in $table.relationshipRoles)
    #if( $relationshipRole.enabled )
    #set( $relationName = "${table.getQualifiedDestinationClassName($relationshipRole)}")
    #set( $relationObjectName = "${table.getVariableName($relationshipRole)}")
    #if(!$relationshipRole.targetMany && $relationshipRole.originMany)  
	private Integer ${relationObjectName}Id = new Integer(0);
    #end	
    #end	
    #end	

	public void setListType(String listType) {
	    this.listType = listType;
	}
	public String getUrlFlag() {
	  String urlFlag = "";
	  if(listType.equalsIgnoreCase("dict")) {
	    if(opName.equals("create")) {
	       urlFlag="Insert";
	    }
	    if(opName.equals("update")) {
	       urlFlag="Update";
	    }
	  }
	  return urlFlag;
	}
	public PaginationSupport getInitResult() {
	   String hql="from ${className}";
      #foreach($relationshipRole in $table.relationshipRoles)
      #if( $relationshipRole.enabled )
      #set( $relationName = "${table.getQualifiedDestinationClassName($relationshipRole)}")
      #set( $relationObjectName = "${table.getVariableName($relationshipRole)}")
      
      #if(!$relationshipRole.targetMany && $relationshipRole.originMany)  
      Integer Session${relationObjectName}Id=new Integer(0);
	  if(ActionContext.getContext().getSession().get("${relationObjectName}Id")!=null){
		 Session${relationObjectName}Id=(Integer)ActionContext.getContext().getSession().get("${relationObjectName}Id");
	  }   
      if(${relationObjectName}Id!=null && !${relationObjectName}Id.equals(new Integer(0))){
		 Session${relationObjectName}Id=${relationObjectName}Id;
	  }
      hql="select ${objectName}s from ${className} ${objectName}s where ${objectName}s.${relationObjectName}.id="+Session${relationObjectName}Id;
	  #end	
      #end	
      #end
	  return coreService.find(hql,getPageNum());      
	}

	public void setOpName(String opName) {
	    this.opName= opName;
	}
	public String getOpName() {
	    return opName;
	}
    #foreach($relationshipRole in $table.relationshipRoles)
    #if( $relationshipRole.enabled )
    #set( $relationName = "${table.getQualifiedDestinationClassName($relationshipRole)}")
    #set( $relationObjectName = "${table.getVariableName($relationshipRole)}")
    #if(!$relationshipRole.targetMany && $relationshipRole.originMany)  
          
	public void set${relationName}Id(Integer ${relationObjectName}Id) {
		this.${relationObjectName}Id = ${relationObjectName}Id;
	}
	public Integer get${relationName}Id() {
		return ${relationObjectName}Id;	
	} 
	#end	
    #end	
    #end
	public String getTableName() {
			return TABLE_NAME;
	}
	public Class getPersistentClass() {
			return ${className}.class;
	}
}